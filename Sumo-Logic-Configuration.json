{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Set up Sumo Logic integration with S3 bucket using bucket policy",
  "Parameters": {
    "S3BucketName": {
      "Type": "String",
      "Description": "Name of the S3 bucket to integrate with Sumo Logic",
      "Default": "pgs-sumologic-log-bucket"
    },
    "SumoLogicCollectorName": {
      "Type": "String",
      "Description": "Name of the Sumo Logic Collector",
      "Default": "PGS-SL-CollectorName"
    },
    "SumoLogicLogGroupName": {
      "Type": "String",
      "Description": "Name of the Sumo Logic Log Group",
      "Default": "PGS-SL-LogGroupName"
    },
    "VpcId": {
      "Type": "String",
      "Description": "ID of the VPC where the S3 bucket resides",
      "Default": "vpc-048e218b7ea9246f9"
    },
    "SubnetIds": {
      "Type": "CommaDelimitedList",
      "Description": "Comma-separated list of Subnet IDs for the VPC",
      "Default": "subnet-080ee376aefdece8e"
    },
    "SecurityGroupIDs": {
      "Type": "String",
      "Description": "(Required) The ID of the security group (SG) that you are updating, in the form sg-0123456789abcdef.",
      "AllowedPattern": "^sg-[0-9a-f]{8}$|^sg-[0-9a-f]{17}$",
      "Default": "sg-09587278f6e7506fc"
    }
  },
  "Resources": {
    "SumoLogicBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": { "Ref": "S3BucketName" },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "SumoLogicReadAccess",
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com"
              },
              "Action": "s3:GetBucketAcl",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    { "Ref": "S3BucketName" }
                  ]
                ]
              }
            },
            {
              "Sid": "SumoLogicWriteAccess",
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com"
              },
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    { "Ref": "S3BucketName" },
                    "/*"
                  ]
                ]
              },
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              }
            }
          ]
        }
      }
    },
    "SumoLogicCollectorAssociation": {
      "Type": "AWS::EC2::VPCAssociationAuthorization",
      "Properties": {
        "VpcId": { "Ref": "VpcId" },
        "SubnetIds": { "Ref": "SubnetIds" },
        "SecurityGroupIds": { "Ref": "SecurityGroupIDs" }
      }
    },
    "SumoLogicDeliveryRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "SumoLogicCollector": {
      "Type": "Custom::SumoLogicCollector",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt": ["SumoLogicCollectorFunction", "Arn"] },
        "CollectorName": { "Ref": "SumoLogicCollectorName" }
      },
      "DependsOn": ["SumoLogicDeliveryRole"]  // Explicitly set the dependency
    },
    "SumoLogicCollectorFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Role": { "Fn::GetAtt": ["SumoLogicCollectorRole", "Arn"] },
        "Runtime": "nodejs14.x",
        "Code": {
          "ZipFile": "const response = require('cfn-response');\nexports.handler = (event, context) => {\n  const responseData = { CollectorID: 'CollectorID12345' };\n  response.send(event, context, response.SUCCESS, responseData);\n};"
        }
      },
      "DependsOn": ["SumoLogicDeliveryRole"]  // Explicitly set the dependency
    },
    "SumoLogicCollectorRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "SumoLogicSource": {
      "Type": "AWS::Logs::LogDelivery",
      "Properties": {
        "LogGroupName": { "Ref": "SumoLogicLogGroupName" },
        "Destination": {
          "DeliveryStreamArn": {
            "Fn::Join": [
              "",
              [
                "arn:aws:kinesis:us-east-1:",
                { "Ref": "AWS::AccountId" },
                ":deliverystream/sumologic-delivery-stream"
              ]
            ]
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "SumoLogicDeliveryRole",
              "Arn"
            ]
          }
        },
        "LogFormat": "json/emf"
      },
      "DependsOn": ["SumoLogicCollector"] // Explicitly set the dependency
    },
    "SumoLogicLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": { "Ref": "SumoLogicLogGroupName" }
      }
    }
  },
  "Outputs": {
    "SumoLogicDeliveryStreamARN": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "arn:aws:kinesis:us-east-1:",
            { "Ref": "AWS::AccountId" },
            ":deliverystream/sumologic-delivery-stream"
          ]
        ]
      },
      "Description": "ARN of the Kinesis Data Firehose Delivery Stream for Sumo Logic integration"
    },
    "SumoLogicCollectorID": {
      "Value": { "Ref": "SumoLogicCollector" },
      "Description": "ID of the Sumo Logic Collector"
    }
  }
}
