description: Create Security Group with Inbound and Outbound Rules
schemaVersion: '0.3'
parameters:
  VPCID:
    type: 'String'
    description: Enter the VPC ID where the security group will be created.
  SecurityGroupName:
    type: 'String'
    description: Enter the name for the new security group.
  InboundCIDR1:
    type: 'String'
    description: Enter the first inbound CIDR block (e.g., 0.0.0.0/0).
  InboundCIDR2:
    type: 'String'
    description: Enter the second inbound CIDR block (e.g., 192.168.0.0/16).
  FromPort:
    type: 'String'
    description: Enter the starting port for inbound rules (e.g., 22).
  ToPort:
    type: 'String'
    description: Enter the ending port for inbound rules (e.g., 80).
  OutboundCIDR1:
    type: 'String'
    description: Enter the outbound CIDR block (e.g., 0.0.0.0/0).
  OutboundPorts:
    type: 'String'
    description: Enter the range of ports for outbound rules (e.g., 80,443).

mainSteps:
  - name: CreateSecurityGroup
    action: 'aws:createSecurityGroup'
    inputs:
      VpcId: '{{VPCID}}'
      GroupName: '{{SecurityGroupName}}'
      Description: 'Created by SSM Automation'
    outputs:
      - Name: SecurityGroupId
        Selector: '$.SecurityGroupId'
        Type: String

  - name: ConfigureInboundRules
    action: 'aws:createSecurityGroupIngress'
    inputs:
      GroupId: '{{CreateSecurityGroup.SecurityGroupId}}'
      IpPermissions:
        - FromPort: '{{FromPort}}'
          ToPort: '{{ToPort}}'
          IpProtocol: 'tcp'
          IpRanges:
            - CidrIp: '{{InboundCIDR1}}'
            - CidrIp: '{{InboundCIDR2}}'

  - name: ConfigureOutboundRules
    action: 'aws:createSecurityGroupEgress'
    inputs:
      GroupId: '{{CreateSecurityGroup.SecurityGroupId}}'
      IpPermissions:
        - FromPort: '{{OutboundPorts}}'
          ToPort: '{{OutboundPorts}}'
          IpProtocol: 'tcp'
          IpRanges:
            - CidrIp: '{{OutboundCIDR1}}'
